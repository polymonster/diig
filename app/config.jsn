import "pmtech/tools/pmbuild_ext/pmbuild_init.jsn"
{
    jsn_vars: {
        pmbuild_dir: "pmtech/third_party/pmbuild"
        pmtech_dir: "pmtech"
    }

	base:
	{
		jsn_vars: {
            data_dir: ""
            build_dir: ""
            bin_dir: ""
        }

        clean: {
            directories: [
                "${data_dir}"
                "${build_dir}"
                "${bin_dir}"
                "temp"
            ]
        }

        render_configs: {
            type: jsn
            args: [
                "-i %{input_file} -o %{output_file}"
                "-I ../assets/configs assets/configs",
            ]
            files: [
                ["${pmtech_dir}/assets/configs", "${data_dir}/configs"]
            ]
            dependencies: true
        }

		base_copy: {
            type: copy
            files: [
                ["${pmtech_dir}/assets/fonts", "${data_dir}/fonts"]
                ["${pmtech_dir}/assets/textures/**/*.dds", "${data_dir}/textures"]
            ]
        }

        texturec: {
            args: [
                "-f %{input_file}"
                "%{export_args}"
                "-o %{output_file}"
            ]
            files: [
                ["assets/images", "${data_dir}/images"]
            ]
            excludes: [
                "export.jsn"
                "*.txt"
                "*.DS_Store"
                "*.dds"
                "*.pmv"
            ]
            change_ext: ".dds"
            dependencies: true
        }

		pmbuild_config: {
            pmbuild_cmd: "${pmbuild_dir}/pmbuild"
            destination: "${data_dir}"
        }

	}

	//
    // mac
    //

    mac(base):
    {
        jsn_vars: {
            data_dir: "bin/osx/data"
            build_dir: "build/osx"
            bin_dir: "bin/osx"
        }

        shared_libs: {
            type: copy
            files: [
                ["${pmtech_dir}/third_party/shared_libs/osx", "bin/osx"]
            ]
        }

        premake: {
            args: [
                "xcode4"
                "--renderer=metal"
                "--platform_dir=osx"
				"--pmtech_dir=${pmtech_dir}/"
            ]
        },

        pmfx: {
            args: [
                "-v1"
                "-shader_platform metal"
                "-i ${pmtech_dir}/assets/shaders"
                "-o bin/osx/data/pmfx/metal"
                "-h shader_structs"
                "-t temp/shaders"
                "-source"
            ]
        }

        make: {
            toolchain: "xcodebuild"
            workspace: "digosx.xcworkspace"
            files: [
                "build/osx/**/*.xcodeproj"
            ]
            change_ext: ""
        }

        launch: {
            cmd: "%{target_path}/Contents/MacOS/%{target_name}"
            files: [
                "bin/osx/**/*.app"
            ]
        }

		libs: {
            type: shell
            explicit: true
            commands: [
                "cd ${pmtech_dir}/third_party && ../pmbuild bullet-mac"
                "cd ${pmtech_dir}/third_party && ../pmbuild make bullet-mac all -configuration Release -quiet"
                "cd ${pmtech_dir}/third_party && ../pmbuild make bullet-mac all -configuration Debug -quiet"
            ]
        }
    }

    // ios
    ios(base):
    {
        jsn_vars: {
            data_dir: "bin/ios/data"
            build_dir: "build/ios"
            bin_dir: "bin/ios"
        }

        premake: {
            args: [
                "xcode4"
                "--renderer=metal"
                "--platform_dir=ios"
                "--xcode_target=ios"
                "--pmtech_dir=${pmtech_dir}/"
                "--plist=dist/ios/Info.plist"
            ]
        }

        pmfx: {
            args: [
                "-v1"
                "-shader_platform metal"
                "-metal_sdk iphoneos"
                "-i ${pmtech_dir}/assets/shaders"
                "-o bin/ios/data/pmfx/metal"
                "-h shader_structs"
                "-t build/temp/shaders"
                "-source"
            ]
        }

        libs: {
            type: shell
            explicit: true
            commands: [
                "cd ${pmtech_dir}/third_party && ../pmbuild bullet-ios"
                "cd ${pmtech_dir}/third_party && ../pmbuild make bullet-ios all -destination generic/platform=iOS -configuration Release -quiet"
                "cd ${pmtech_dir}/third_party && ../pmbuild make bullet-ios all -destination generic/platform=iOS -configuration Debug -quiet"
            ]
        }

        makeicon: {
            type: shell
            explicit: true
            commands: [
                "./tools/osx/makeicon -sizes:dist/ios/Images.xcassets/AppIcon.appiconset/Contents.json -input:dist/icon/dig_icon.png -resize -platform:ios dist/ios/Images.xcassets/AppIcon.appiconset"
            ]
        }

        make: {
            toolchain: "xcodebuild"
            workspace: "diig_ios.xcworkspace"
            files: [
                "build/ios/**/*.xcodeproj"
            ]
            change_ext: ""
        }
    }

    ios-testflight: {
        testflight: {
            type: shell
            commands: [
                "xcodebuild archive -workspace build/ios/diig_ios.xcworkspace -configuration Release -scheme diig -archivePath build/ios/diig_ios -allowProvisioningUpdates",
                "xcodebuild -exportArchive -archivePath build/ios/diig_ios.xcarchive -exportPath build/ios/export -exportOptionsPlist dist/ios/ExportOptions.plist -allowProvisioningUpdates"
            ]
        }
    }
}
